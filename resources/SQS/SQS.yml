#
# Author: Patrick Glinski
# SQS Developer Guide : https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/welcome.html
# SQS Cloudformation Documentation: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html
# Description: CloudFormation Provisioning for SQS Queue
#
---
AWSTemplateFormatVersion: 2010-09-09
Description: Cloudformation template creates an Simple Queue Service (SQS) standard queue

Parameters:
  QueueName:
    Description: |
      A name for the queue. To create a FIFO queue,
      the name of your FIFO queue must end with the
      .fifo suffix.
    Type: String
    Default: ''

  DelaySeconds:
    Description: |
      The time in seconds for which the delivery of
      all messages in the queue is delayed.
      Specify an integer value of 0 to 900 (15 Minutes).
    Type: String
    Default: '0'

  MaximumMessageSize:
    Description: |
      The limit of how many bytes that a message can
      contain before AWS SQS rejects it.
      Specify an integer value 1,024 (1 KiB) bytes to
      262,144 bytes. The default is 262,144 (256 KiB).
    Type: String
    Default: '1024'

  MessageRetentionPeriod:
    Description: |
      The number of seconds that SQS retains a message.
      Specify an integer value from 60 seconds to
      1,209,600 seconds. The default is 345,600 seconds.
    Type: String
    Default: '345600'

  ReceiveMessageWaitTimeSeconds:
    Description: |
      The number of seconds, that the ReceiveMessage action
      call will wait until a message is in the queue in
      order to include it in the response.
      Specify an integer from 1 to 20.
    Type: String
    Default: '0'

  VisibilityTimeout:
    Description: |
      The length of time (seconds) during which a message
      will be unavailable after a message is delivered from
      the queue.
    Type: String
    Default: '30'

  DeadLetterTargetArn:
    Description: |
      The Amazon Resource Name (ARN) of the dead-letter-queue (DLQ)
      to which SQS moves messages after the value of maxReceiveCount
      is exceeded
    Type: String
    Default: ''

  MaxReceiveCount:
    Description: |
      The number of times a message is delivered to the
      source queue before being moved to the DLQ.
    Type: String
    Default: '3'


Conditions:
  # IF DeadLetterQueueARN is '' than !TRUE == False
  HasDeadLetterQueue: !Not [ !Equals [ !Ref DeadLetterTargetArn, ''] ]


Resources:
  Queue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Ref QueueName
      DelaySeconds: !Ref DelaySeconds
      MaximumMessageSize: !Ref MaximumMessageSize
      MessageRetentionPeriod: !Ref MessageRetentionPeriod
      ReceiveMessageWaitTimeSeconds: !Ref ReceiveMessageWaitTimeSeconds
      VisibilityTimeout: !Ref VisibilityTimeout
      RedrivePolicy: !If [ HasDeadLetterQueue, { "deadLetterTargetArn" : !Sub '${DeadLetterTargetArn}', "maxReceiceCount": !Ref MaxReceiveCount }, !Ref 'AWS::NoValue']

Outputs:
  QueueURL:
    Description: URL of the new SQS Queue.
    Value:
      Ref: Queue

  QueueARN:
    Description: The ARN of the new SQS Queue.
    Value:
      Fn::GetAtt:
        - Queue
        - Arn

  QueueName:
    Description: Name of the AWS SQS Queue
    Value:
      Fn::GetAtt:
        - Queue
        - QueueName